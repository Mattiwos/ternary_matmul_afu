	component matmul_afu_system_fixed is
		port (
			avmm_mmio_address                : in  std_logic_vector(47 downto 0)  := (others => 'X'); -- address
			avmm_mmio_writedata              : in  std_logic_vector(63 downto 0)  := (others => 'X'); -- writedata
			avmm_mmio_byteenable             : in  std_logic_vector(7 downto 0)   := (others => 'X'); -- byteenable
			avmm_mmio_write                  : in  std_logic                      := 'X';             -- write
			avmm_mmio_read                   : in  std_logic                      := 'X';             -- read
			avmm_mmio_readdata               : out std_logic_vector(63 downto 0);                     -- readdata
			avmm_mmio_readdatavalid          : out std_logic;                                         -- readdatavalid
			avmm_mmio_waitrequest            : out std_logic;                                         -- waitrequest
			avmm_mmio_burstcount             : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- burstcount
			ddr4a_master_dma_waitrequest     : in  std_logic                      := 'X';             -- waitrequest
			ddr4a_master_dma_readdata        : in  std_logic_vector(511 downto 0) := (others => 'X'); -- readdata
			ddr4a_master_dma_readdatavalid   : in  std_logic                      := 'X';             -- readdatavalid
			ddr4a_master_dma_burstcount      : out std_logic_vector(2 downto 0);                      -- burstcount
			ddr4a_master_dma_writedata       : out std_logic_vector(511 downto 0);                    -- writedata
			ddr4a_master_dma_address         : out std_logic_vector(32 downto 0);                     -- address
			ddr4a_master_dma_write           : out std_logic;                                         -- write
			ddr4a_master_dma_read            : out std_logic;                                         -- read
			ddr4a_master_dma_byteenable      : out std_logic_vector(63 downto 0);                     -- byteenable
			ddr4a_master_dma_debugaccess     : out std_logic;                                         -- debugaccess
			dma_clk_clk                      : in  std_logic                      := 'X';             -- clk
			dma_reset_reset                  : in  std_logic                      := 'X';             -- reset
			host_read_address                : out std_logic_vector(47 downto 0);                     -- address
			host_read_byteenable             : out std_logic_vector(63 downto 0);                     -- byteenable
			host_read_burstcount             : out std_logic_vector(2 downto 0);                      -- burstcount
			host_read_read                   : out std_logic;                                         -- read
			host_read_readdata               : in  std_logic_vector(511 downto 0) := (others => 'X'); -- readdata
			host_read_readdatavalid          : in  std_logic                      := 'X';             -- readdatavalid
			host_read_waitrequest            : in  std_logic                      := 'X';             -- waitrequest
			host_write_address               : out std_logic_vector(47 downto 0);                     -- address
			host_write_writedata             : out std_logic_vector(511 downto 0);                    -- writedata
			host_write_byteenable            : out std_logic_vector(63 downto 0);                     -- byteenable
			host_write_burstcount            : out std_logic_vector(2 downto 0);                      -- burstcount
			host_write_write                 : out std_logic;                                         -- write
			host_write_response              : in  std_logic_vector(1 downto 0)   := (others => 'X'); -- response
			host_write_writeresponsevalid    : in  std_logic                      := 'X';             -- writeresponsevalid
			host_write_waitrequest           : in  std_logic                      := 'X';             -- waitrequest
			matmul_clk_clk                   : in  std_logic                      := 'X';             -- clk
			ddr4a_slave_matmul_waitrequest   : out std_logic;                                         -- waitrequest
			ddr4a_slave_matmul_readdata      : out std_logic_vector(7 downto 0);                      -- readdata
			ddr4a_slave_matmul_readdatavalid : out std_logic;                                         -- readdatavalid
			ddr4a_slave_matmul_burstcount    : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- burstcount
			ddr4a_slave_matmul_writedata     : in  std_logic_vector(7 downto 0)   := (others => 'X'); -- writedata
			ddr4a_slave_matmul_address       : in  std_logic_vector(32 downto 0)  := (others => 'X'); -- address
			ddr4a_slave_matmul_write         : in  std_logic                      := 'X';             -- write
			ddr4a_slave_matmul_read          : in  std_logic                      := 'X';             -- read
			ddr4a_slave_matmul_byteenable    : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- byteenable
			ddr4a_slave_matmul_debugaccess   : in  std_logic                      := 'X';             -- debugaccess
			matmul_ready_export              : in  std_logic_vector(31 downto 0)  := (others => 'X'); -- export
			matmul_reset_reset               : out std_logic;                                         -- reset
			matmul_pgm_ram_address           : in  std_logic_vector(5 downto 0)   := (others => 'X'); -- address
			matmul_pgm_ram_chipselect        : in  std_logic                      := 'X';             -- chipselect
			matmul_pgm_ram_clken             : in  std_logic                      := 'X';             -- clken
			matmul_pgm_ram_write             : in  std_logic                      := 'X';             -- write
			matmul_pgm_ram_readdata          : out std_logic_vector(63 downto 0);                     -- readdata
			matmul_pgm_ram_writedata         : in  std_logic_vector(63 downto 0)  := (others => 'X'); -- writedata
			matmul_pgm_ram_byteenable        : in  std_logic_vector(7 downto 0)   := (others => 'X'); -- byteenable
			matmul_start_export              : out std_logic_vector(31 downto 0)                      -- export
		);
	end component matmul_afu_system_fixed;

