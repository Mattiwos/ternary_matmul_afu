// matmul_afu_system_fixed.v

// Generated using ACDS version 19.2 57

`timescale 1 ps / 1 ps
module mu_afu_system (
		input  wire [47:0]  avmm_mmio_address,                //          avmm_mmio.address
		input  wire [63:0]  avmm_mmio_writedata,              //                   .writedata
		input  wire [7:0]   avmm_mmio_byteenable,             //                   .byteenable
		input  wire         avmm_mmio_write,                  //                   .write
		input  wire         avmm_mmio_read,                   //                   .read
		output wire [63:0]  avmm_mmio_readdata,               //                   .readdata
		output wire         avmm_mmio_readdatavalid,          //                   .readdatavalid
		output wire         avmm_mmio_waitrequest,            //                   .waitrequest
		input  wire [0:0]   avmm_mmio_burstcount,             //                   .burstcount
		input  wire         ddr4a_master_dma_waitrequest,     //   ddr4a_master_dma.waitrequest
		input  wire [511:0] ddr4a_master_dma_readdata,        //                   .readdata
		input  wire         ddr4a_master_dma_readdatavalid,   //                   .readdatavalid
		output wire [2:0]   ddr4a_master_dma_burstcount,      //                   .burstcount
		output wire [511:0] ddr4a_master_dma_writedata,       //                   .writedata
		output wire [32:0]  ddr4a_master_dma_address,         //                   .address
		output wire         ddr4a_master_dma_write,           //                   .write
		output wire         ddr4a_master_dma_read,            //                   .read
		output wire [63:0]  ddr4a_master_dma_byteenable,      //                   .byteenable
		output wire         ddr4a_master_dma_debugaccess,     //                   .debugaccess
		input  wire         dma_clk_clk,                      //            dma_clk.clk
		input  wire         dma_reset_reset,                  //          dma_reset.reset
		output wire [47:0]  host_read_address,                //          host_read.address
		output wire [63:0]  host_read_byteenable,             //                   .byteenable
		output wire [2:0]   host_read_burstcount,             //                   .burstcount
		output wire         host_read_read,                   //                   .read
		input  wire [511:0] host_read_readdata,               //                   .readdata
		input  wire         host_read_readdatavalid,          //                   .readdatavalid
		input  wire         host_read_waitrequest,            //                   .waitrequest
		output wire [47:0]  host_write_address,               //         host_write.address
		output wire [511:0] host_write_writedata,             //                   .writedata
		output wire [63:0]  host_write_byteenable,            //                   .byteenable
		output wire [2:0]   host_write_burstcount,            //                   .burstcount
		output wire         host_write_write,                 //                   .write
		input  wire [1:0]   host_write_response,              //                   .response
		input  wire         host_write_writeresponsevalid,    //                   .writeresponsevalid
		input  wire         host_write_waitrequest,           //                   .waitrequest
		input  wire         matmul_clk_clk,                   //         matmul_clk.clk
		output wire         ddr4a_slave_matmul_waitrequest,   // ddr4a_slave_matmul.waitrequest
		output wire [7:0]   ddr4a_slave_matmul_readdata,      //                   .readdata
		output wire         ddr4a_slave_matmul_readdatavalid, //                   .readdatavalid
		input  wire [0:0]   ddr4a_slave_matmul_burstcount,    //                   .burstcount
		input  wire [7:0]   ddr4a_slave_matmul_writedata,     //                   .writedata
		input  wire [32:0]  ddr4a_slave_matmul_address,       //                   .address
		input  wire         ddr4a_slave_matmul_write,         //                   .write
		input  wire         ddr4a_slave_matmul_read,          //                   .read
		input  wire [0:0]   ddr4a_slave_matmul_byteenable,    //                   .byteenable
		input  wire         ddr4a_slave_matmul_debugaccess,   //                   .debugaccess
		input  wire [31:0]  matmul_ready_export,              //       matmul_ready.export
		output wire         matmul_reset_reset,               //       matmul_reset.reset
		input  wire [5:0]   matmul_pgm_ram_address,           //     matmul_pgm_ram.address
		input  wire         matmul_pgm_ram_chipselect,        //                   .chipselect
		input  wire         matmul_pgm_ram_clken,             //                   .clken
		input  wire         matmul_pgm_ram_write,             //                   .write
		output wire [63:0]  matmul_pgm_ram_readdata,          //                   .readdata
		input  wire [63:0]  matmul_pgm_ram_writedata,         //                   .writedata
		input  wire [7:0]   matmul_pgm_ram_byteenable,        //                   .byteenable
		output wire [31:0]  matmul_start_export               //       matmul_start.export
	);

	wire  [511:0] msgdma_bbb_host_read_readdata;                                  // matmul_afu_farreach_read:s_readdata -> msgdma_bbb:host_read_readdata
	wire          msgdma_bbb_host_read_waitrequest;                               // matmul_afu_farreach_read:s_waitrequest -> msgdma_bbb:host_read_waitrequest
	wire   [47:0] msgdma_bbb_host_read_address;                                   // msgdma_bbb:host_read_address -> matmul_afu_farreach_read:s_address
	wire   [63:0] msgdma_bbb_host_read_byteenable;                                // msgdma_bbb:host_read_byteenable -> matmul_afu_farreach_read:s_byteenable
	wire          msgdma_bbb_host_read_read;                                      // msgdma_bbb:host_read_read -> matmul_afu_farreach_read:s_read
	wire          msgdma_bbb_host_read_readdatavalid;                             // matmul_afu_farreach_read:s_readdatavalid -> msgdma_bbb:host_read_readdatavalid
	wire    [2:0] msgdma_bbb_host_read_burstcount;                                // msgdma_bbb:host_read_burstcount -> matmul_afu_farreach_read:s_burst
	wire          msgdma_bbb_host_write_waitrequest;                              // matmul_afu_farreach_write:s_waitrequest -> msgdma_bbb:host_write_waitrequest
	wire   [47:0] msgdma_bbb_host_write_address;                                  // msgdma_bbb:host_write_address -> matmul_afu_farreach_write:s_address
	wire   [63:0] msgdma_bbb_host_write_byteenable;                               // msgdma_bbb:host_write_byteenable -> matmul_afu_farreach_write:s_byteenable
	wire    [1:0] msgdma_bbb_host_write_response;                                 // matmul_afu_farreach_write:s_response -> msgdma_bbb:host_write_response
	wire  [511:0] msgdma_bbb_host_write_writedata;                                // msgdma_bbb:host_write_writedata -> matmul_afu_farreach_write:s_writedata
	wire          msgdma_bbb_host_write_write;                                    // msgdma_bbb:host_write_write -> matmul_afu_farreach_write:s_write
	wire          msgdma_bbb_host_write_writeresponsevalid;                       // matmul_afu_farreach_write:s_writeresponsevalid -> msgdma_bbb:host_write_writeresponsevalid
	wire    [2:0] msgdma_bbb_host_write_burstcount;                               // msgdma_bbb:host_write_burstcount -> matmul_afu_farreach_write:s_burst
	wire          matmul_afu_dma_clock_out_clk_clk;                               // matmul_afu_dma_clock:out_clk -> [matmul_afu_csr_bridge:s_clk, matmul_afu_ddr4_bridge:clk, matmul_afu_dma_rst:clk, matmul_afu_farreach_read:s_clk, matmul_afu_farreach_write:s_clk, matmul_afu_id_afu:clk, matmul_afu_id_dma:clk, matmul_afu_id_matmul:clk, mm_interconnect_2:matmul_afu_dma_clock_out_clk_clk, mm_interconnect_3:matmul_afu_dma_clock_out_clk_clk, msgdma_bbb:clk_clk]
	wire          matmul_afu_matmul_clock_out_clk_clk;                            // matmul_afu_matmul_clock:out_clk -> [matmul_afu_matmul_ddr4a_bridge:clk, matmul_afu_matmul_ready:clk, matmul_afu_matmul_rst:clk, matmul_afu_pgm_ram:clk, matmul_afu_start_matmul:clk, mm_interconnect_2:matmul_afu_matmul_clock_out_clk_clk, mm_interconnect_3:matmul_afu_matmul_clock_out_clk_clk, rst_controller:clk, rst_controller_001:clk]
	wire          matmul_afu_dma_rst_out_reset_reset;                             // matmul_afu_dma_rst:out_reset -> [matmul_afu_csr_bridge:reset, matmul_afu_ddr4_bridge:reset, matmul_afu_farreach_read:reset, matmul_afu_farreach_write:reset, matmul_afu_id_afu:reset, matmul_afu_id_dma:reset, matmul_afu_id_matmul:reset, mm_interconnect_2:matmul_afu_ddr4_bridge_reset_reset_bridge_in_reset_reset, mm_interconnect_3:matmul_afu_csr_bridge_master_translator_reset_reset_bridge_in_reset_reset, msgdma_bbb:reset_reset, rst_controller:reset_in0, rst_controller_001:reset_in0]
	wire          matmul_afu_matmul_ddr4a_bridge_m0_waitrequest;                  // mm_interconnect_2:matmul_afu_matmul_ddr4a_bridge_m0_waitrequest -> matmul_afu_matmul_ddr4a_bridge:m0_waitrequest
	wire    [7:0] matmul_afu_matmul_ddr4a_bridge_m0_readdata;                     // mm_interconnect_2:matmul_afu_matmul_ddr4a_bridge_m0_readdata -> matmul_afu_matmul_ddr4a_bridge:m0_readdata
	wire          matmul_afu_matmul_ddr4a_bridge_m0_debugaccess;                  // matmul_afu_matmul_ddr4a_bridge:m0_debugaccess -> mm_interconnect_2:matmul_afu_matmul_ddr4a_bridge_m0_debugaccess
	wire   [32:0] matmul_afu_matmul_ddr4a_bridge_m0_address;                      // matmul_afu_matmul_ddr4a_bridge:m0_address -> mm_interconnect_2:matmul_afu_matmul_ddr4a_bridge_m0_address
	wire          matmul_afu_matmul_ddr4a_bridge_m0_read;                         // matmul_afu_matmul_ddr4a_bridge:m0_read -> mm_interconnect_2:matmul_afu_matmul_ddr4a_bridge_m0_read
	wire    [0:0] matmul_afu_matmul_ddr4a_bridge_m0_byteenable;                   // matmul_afu_matmul_ddr4a_bridge:m0_byteenable -> mm_interconnect_2:matmul_afu_matmul_ddr4a_bridge_m0_byteenable
	wire          matmul_afu_matmul_ddr4a_bridge_m0_readdatavalid;                // mm_interconnect_2:matmul_afu_matmul_ddr4a_bridge_m0_readdatavalid -> matmul_afu_matmul_ddr4a_bridge:m0_readdatavalid
	wire    [7:0] matmul_afu_matmul_ddr4a_bridge_m0_writedata;                    // matmul_afu_matmul_ddr4a_bridge:m0_writedata -> mm_interconnect_2:matmul_afu_matmul_ddr4a_bridge_m0_writedata
	wire          matmul_afu_matmul_ddr4a_bridge_m0_write;                        // matmul_afu_matmul_ddr4a_bridge:m0_write -> mm_interconnect_2:matmul_afu_matmul_ddr4a_bridge_m0_write
	wire    [0:0] matmul_afu_matmul_ddr4a_bridge_m0_burstcount;                   // matmul_afu_matmul_ddr4a_bridge:m0_burstcount -> mm_interconnect_2:matmul_afu_matmul_ddr4a_bridge_m0_burstcount
	wire  [511:0] msgdma_bbb_mem_read_write_readdata;                             // mm_interconnect_2:msgdma_bbb_mem_read_write_readdata -> msgdma_bbb:mem_read_write_readdata
	wire          msgdma_bbb_mem_read_write_waitrequest;                          // mm_interconnect_2:msgdma_bbb_mem_read_write_waitrequest -> msgdma_bbb:mem_read_write_waitrequest
	wire   [47:0] msgdma_bbb_mem_read_write_address;                              // msgdma_bbb:mem_read_write_address -> mm_interconnect_2:msgdma_bbb_mem_read_write_address
	wire   [63:0] msgdma_bbb_mem_read_write_byteenable;                           // msgdma_bbb:mem_read_write_byteenable -> mm_interconnect_2:msgdma_bbb_mem_read_write_byteenable
	wire          msgdma_bbb_mem_read_write_read;                                 // msgdma_bbb:mem_read_write_read -> mm_interconnect_2:msgdma_bbb_mem_read_write_read
	wire          msgdma_bbb_mem_read_write_readdatavalid;                        // mm_interconnect_2:msgdma_bbb_mem_read_write_readdatavalid -> msgdma_bbb:mem_read_write_readdatavalid
	wire  [511:0] msgdma_bbb_mem_read_write_writedata;                            // msgdma_bbb:mem_read_write_writedata -> mm_interconnect_2:msgdma_bbb_mem_read_write_writedata
	wire          msgdma_bbb_mem_read_write_write;                                // msgdma_bbb:mem_read_write_write -> mm_interconnect_2:msgdma_bbb_mem_read_write_write
	wire    [2:0] msgdma_bbb_mem_read_write_burstcount;                           // msgdma_bbb:mem_read_write_burstcount -> mm_interconnect_2:msgdma_bbb_mem_read_write_burstcount
	wire  [511:0] mm_interconnect_2_matmul_afu_ddr4_bridge_s0_readdata;           // matmul_afu_ddr4_bridge:s0_readdata -> mm_interconnect_2:matmul_afu_ddr4_bridge_s0_readdata
	wire          mm_interconnect_2_matmul_afu_ddr4_bridge_s0_waitrequest;        // matmul_afu_ddr4_bridge:s0_waitrequest -> mm_interconnect_2:matmul_afu_ddr4_bridge_s0_waitrequest
	wire          mm_interconnect_2_matmul_afu_ddr4_bridge_s0_debugaccess;        // mm_interconnect_2:matmul_afu_ddr4_bridge_s0_debugaccess -> matmul_afu_ddr4_bridge:s0_debugaccess
	wire   [32:0] mm_interconnect_2_matmul_afu_ddr4_bridge_s0_address;            // mm_interconnect_2:matmul_afu_ddr4_bridge_s0_address -> matmul_afu_ddr4_bridge:s0_address
	wire          mm_interconnect_2_matmul_afu_ddr4_bridge_s0_read;               // mm_interconnect_2:matmul_afu_ddr4_bridge_s0_read -> matmul_afu_ddr4_bridge:s0_read
	wire   [63:0] mm_interconnect_2_matmul_afu_ddr4_bridge_s0_byteenable;         // mm_interconnect_2:matmul_afu_ddr4_bridge_s0_byteenable -> matmul_afu_ddr4_bridge:s0_byteenable
	wire          mm_interconnect_2_matmul_afu_ddr4_bridge_s0_readdatavalid;      // matmul_afu_ddr4_bridge:s0_readdatavalid -> mm_interconnect_2:matmul_afu_ddr4_bridge_s0_readdatavalid
	wire          mm_interconnect_2_matmul_afu_ddr4_bridge_s0_write;              // mm_interconnect_2:matmul_afu_ddr4_bridge_s0_write -> matmul_afu_ddr4_bridge:s0_write
	wire  [511:0] mm_interconnect_2_matmul_afu_ddr4_bridge_s0_writedata;          // mm_interconnect_2:matmul_afu_ddr4_bridge_s0_writedata -> matmul_afu_ddr4_bridge:s0_writedata
	wire    [2:0] mm_interconnect_2_matmul_afu_ddr4_bridge_s0_burstcount;         // mm_interconnect_2:matmul_afu_ddr4_bridge_s0_burstcount -> matmul_afu_ddr4_bridge:s0_burstcount
	wire   [63:0] matmul_afu_csr_bridge_master_readdata;                          // mm_interconnect_3:matmul_afu_csr_bridge_master_readdata -> matmul_afu_csr_bridge:m_readdata
	wire          matmul_afu_csr_bridge_master_waitrequest;                       // mm_interconnect_3:matmul_afu_csr_bridge_master_waitrequest -> matmul_afu_csr_bridge:m_waitrequest
	wire   [47:0] matmul_afu_csr_bridge_master_address;                           // matmul_afu_csr_bridge:m_address -> mm_interconnect_3:matmul_afu_csr_bridge_master_address
	wire    [7:0] matmul_afu_csr_bridge_master_byteenable;                        // matmul_afu_csr_bridge:m_byteenable -> mm_interconnect_3:matmul_afu_csr_bridge_master_byteenable
	wire          matmul_afu_csr_bridge_master_read;                              // matmul_afu_csr_bridge:m_read -> mm_interconnect_3:matmul_afu_csr_bridge_master_read
	wire          matmul_afu_csr_bridge_master_readdatavalid;                     // mm_interconnect_3:matmul_afu_csr_bridge_master_readdatavalid -> matmul_afu_csr_bridge:m_readdatavalid
	wire   [63:0] matmul_afu_csr_bridge_master_writedata;                         // matmul_afu_csr_bridge:m_writedata -> mm_interconnect_3:matmul_afu_csr_bridge_master_writedata
	wire          matmul_afu_csr_bridge_master_write;                             // matmul_afu_csr_bridge:m_write -> mm_interconnect_3:matmul_afu_csr_bridge_master_write
	wire    [0:0] matmul_afu_csr_bridge_master_burstcount;                        // matmul_afu_csr_bridge:m_burst -> mm_interconnect_3:matmul_afu_csr_bridge_master_burstcount
	wire   [63:0] mm_interconnect_3_matmul_afu_id_afu_afu_cfg_slave_readdata;     // matmul_afu_id_afu:avmm_readdata -> mm_interconnect_3:matmul_afu_id_afu_afu_cfg_slave_readdata
	wire    [2:0] mm_interconnect_3_matmul_afu_id_afu_afu_cfg_slave_address;      // mm_interconnect_3:matmul_afu_id_afu_afu_cfg_slave_address -> matmul_afu_id_afu:avmm_address
	wire          mm_interconnect_3_matmul_afu_id_afu_afu_cfg_slave_read;         // mm_interconnect_3:matmul_afu_id_afu_afu_cfg_slave_read -> matmul_afu_id_afu:avmm_read
	wire          mm_interconnect_3_matmul_afu_id_afu_afu_cfg_slave_write;        // mm_interconnect_3:matmul_afu_id_afu_afu_cfg_slave_write -> matmul_afu_id_afu:avmm_write
	wire   [63:0] mm_interconnect_3_matmul_afu_id_afu_afu_cfg_slave_writedata;    // mm_interconnect_3:matmul_afu_id_afu_afu_cfg_slave_writedata -> matmul_afu_id_afu:avmm_writedata
	wire   [63:0] mm_interconnect_3_matmul_afu_id_matmul_afu_cfg_slave_readdata;  // matmul_afu_id_matmul:avmm_readdata -> mm_interconnect_3:matmul_afu_id_matmul_afu_cfg_slave_readdata
	wire    [2:0] mm_interconnect_3_matmul_afu_id_matmul_afu_cfg_slave_address;   // mm_interconnect_3:matmul_afu_id_matmul_afu_cfg_slave_address -> matmul_afu_id_matmul:avmm_address
	wire          mm_interconnect_3_matmul_afu_id_matmul_afu_cfg_slave_read;      // mm_interconnect_3:matmul_afu_id_matmul_afu_cfg_slave_read -> matmul_afu_id_matmul:avmm_read
	wire          mm_interconnect_3_matmul_afu_id_matmul_afu_cfg_slave_write;     // mm_interconnect_3:matmul_afu_id_matmul_afu_cfg_slave_write -> matmul_afu_id_matmul:avmm_write
	wire   [63:0] mm_interconnect_3_matmul_afu_id_matmul_afu_cfg_slave_writedata; // mm_interconnect_3:matmul_afu_id_matmul_afu_cfg_slave_writedata -> matmul_afu_id_matmul:avmm_writedata
	wire   [63:0] mm_interconnect_3_matmul_afu_id_dma_afu_cfg_slave_readdata;     // matmul_afu_id_dma:avmm_readdata -> mm_interconnect_3:matmul_afu_id_dma_afu_cfg_slave_readdata
	wire    [2:0] mm_interconnect_3_matmul_afu_id_dma_afu_cfg_slave_address;      // mm_interconnect_3:matmul_afu_id_dma_afu_cfg_slave_address -> matmul_afu_id_dma:avmm_address
	wire          mm_interconnect_3_matmul_afu_id_dma_afu_cfg_slave_read;         // mm_interconnect_3:matmul_afu_id_dma_afu_cfg_slave_read -> matmul_afu_id_dma:avmm_read
	wire          mm_interconnect_3_matmul_afu_id_dma_afu_cfg_slave_write;        // mm_interconnect_3:matmul_afu_id_dma_afu_cfg_slave_write -> matmul_afu_id_dma:avmm_write
	wire   [63:0] mm_interconnect_3_matmul_afu_id_dma_afu_cfg_slave_writedata;    // mm_interconnect_3:matmul_afu_id_dma_afu_cfg_slave_writedata -> matmul_afu_id_dma:avmm_writedata
	wire   [63:0] mm_interconnect_3_msgdma_bbb_csr_readdata;                      // msgdma_bbb:csr_readdata -> mm_interconnect_3:msgdma_bbb_csr_readdata
	wire          mm_interconnect_3_msgdma_bbb_csr_waitrequest;                   // msgdma_bbb:csr_waitrequest -> mm_interconnect_3:msgdma_bbb_csr_waitrequest
	wire    [7:0] mm_interconnect_3_msgdma_bbb_csr_address;                       // mm_interconnect_3:msgdma_bbb_csr_address -> msgdma_bbb:csr_address
	wire          mm_interconnect_3_msgdma_bbb_csr_read;                          // mm_interconnect_3:msgdma_bbb_csr_read -> msgdma_bbb:csr_read
	wire    [7:0] mm_interconnect_3_msgdma_bbb_csr_byteenable;                    // mm_interconnect_3:msgdma_bbb_csr_byteenable -> msgdma_bbb:csr_byteenable
	wire          mm_interconnect_3_msgdma_bbb_csr_readdatavalid;                 // msgdma_bbb:csr_readdatavalid -> mm_interconnect_3:msgdma_bbb_csr_readdatavalid
	wire          mm_interconnect_3_msgdma_bbb_csr_write;                         // mm_interconnect_3:msgdma_bbb_csr_write -> msgdma_bbb:csr_write
	wire   [63:0] mm_interconnect_3_msgdma_bbb_csr_writedata;                     // mm_interconnect_3:msgdma_bbb_csr_writedata -> msgdma_bbb:csr_writedata
	wire    [0:0] mm_interconnect_3_msgdma_bbb_csr_burstcount;                    // mm_interconnect_3:msgdma_bbb_csr_burstcount -> msgdma_bbb:csr_burstcount
	wire          mm_interconnect_3_matmul_afu_start_matmul_s1_chipselect;        // mm_interconnect_3:matmul_afu_start_matmul_s1_chipselect -> matmul_afu_start_matmul:chipselect
	wire   [31:0] mm_interconnect_3_matmul_afu_start_matmul_s1_readdata;          // matmul_afu_start_matmul:readdata -> mm_interconnect_3:matmul_afu_start_matmul_s1_readdata
	wire    [1:0] mm_interconnect_3_matmul_afu_start_matmul_s1_address;           // mm_interconnect_3:matmul_afu_start_matmul_s1_address -> matmul_afu_start_matmul:address
	wire          mm_interconnect_3_matmul_afu_start_matmul_s1_write;             // mm_interconnect_3:matmul_afu_start_matmul_s1_write -> matmul_afu_start_matmul:write_n
	wire   [31:0] mm_interconnect_3_matmul_afu_start_matmul_s1_writedata;         // mm_interconnect_3:matmul_afu_start_matmul_s1_writedata -> matmul_afu_start_matmul:writedata
	wire          mm_interconnect_3_matmul_afu_matmul_ready_s1_chipselect;        // mm_interconnect_3:matmul_afu_matmul_ready_s1_chipselect -> matmul_afu_matmul_ready:chipselect
	wire   [31:0] mm_interconnect_3_matmul_afu_matmul_ready_s1_readdata;          // matmul_afu_matmul_ready:readdata -> mm_interconnect_3:matmul_afu_matmul_ready_s1_readdata
	wire    [1:0] mm_interconnect_3_matmul_afu_matmul_ready_s1_address;           // mm_interconnect_3:matmul_afu_matmul_ready_s1_address -> matmul_afu_matmul_ready:address
	wire          mm_interconnect_3_matmul_afu_matmul_ready_s1_write;             // mm_interconnect_3:matmul_afu_matmul_ready_s1_write -> matmul_afu_matmul_ready:write_n
	wire   [31:0] mm_interconnect_3_matmul_afu_matmul_ready_s1_writedata;         // mm_interconnect_3:matmul_afu_matmul_ready_s1_writedata -> matmul_afu_matmul_ready:writedata
	wire          mm_interconnect_3_matmul_afu_pgm_ram_s1_chipselect;             // mm_interconnect_3:matmul_afu_pgm_ram_s1_chipselect -> matmul_afu_pgm_ram:chipselect
	wire   [63:0] mm_interconnect_3_matmul_afu_pgm_ram_s1_readdata;               // matmul_afu_pgm_ram:readdata -> mm_interconnect_3:matmul_afu_pgm_ram_s1_readdata
	wire    [5:0] mm_interconnect_3_matmul_afu_pgm_ram_s1_address;                // mm_interconnect_3:matmul_afu_pgm_ram_s1_address -> matmul_afu_pgm_ram:address
	wire    [7:0] mm_interconnect_3_matmul_afu_pgm_ram_s1_byteenable;             // mm_interconnect_3:matmul_afu_pgm_ram_s1_byteenable -> matmul_afu_pgm_ram:byteenable
	wire          mm_interconnect_3_matmul_afu_pgm_ram_s1_write;                  // mm_interconnect_3:matmul_afu_pgm_ram_s1_write -> matmul_afu_pgm_ram:write
	wire   [63:0] mm_interconnect_3_matmul_afu_pgm_ram_s1_writedata;              // mm_interconnect_3:matmul_afu_pgm_ram_s1_writedata -> matmul_afu_pgm_ram:writedata
	wire          mm_interconnect_3_matmul_afu_pgm_ram_s1_clken;                  // mm_interconnect_3:matmul_afu_pgm_ram_s1_clken -> matmul_afu_pgm_ram:clken
	wire          rst_controller_reset_out_reset;                                 // rst_controller:reset_out -> [matmul_afu_matmul_ddr4a_bridge:reset, matmul_afu_matmul_rst:in_reset]
	wire          rst_controller_001_reset_out_reset;                             // rst_controller_001:reset_out -> [matmul_afu_matmul_ready:reset_n, matmul_afu_pgm_ram:reset, matmul_afu_start_matmul:reset_n, mm_interconnect_2:matmul_afu_matmul_ddr4a_bridge_m0_translator_reset_reset_bridge_in_reset_reset, mm_interconnect_3:matmul_afu_start_matmul_reset_reset_bridge_in_reset_reset]

	matmul_afu_csr_bridge matmul_afu_csr_bridge (
		.s_clk           (matmul_afu_dma_clock_out_clk_clk),           //   input,   width = 1,    clk.clk
		.reset           (matmul_afu_dma_rst_out_reset_reset),         //   input,   width = 1,  reset.reset
		.s_address       (avmm_mmio_address),                          //   input,  width = 48,  slave.address
		.s_writedata     (avmm_mmio_writedata),                        //   input,  width = 64,       .writedata
		.s_byteenable    (avmm_mmio_byteenable),                       //   input,   width = 8,       .byteenable
		.s_write         (avmm_mmio_write),                            //   input,   width = 1,       .write
		.s_read          (avmm_mmio_read),                             //   input,   width = 1,       .read
		.s_readdata      (avmm_mmio_readdata),                         //  output,  width = 64,       .readdata
		.s_readdatavalid (avmm_mmio_readdatavalid),                    //  output,   width = 1,       .readdatavalid
		.s_waitrequest   (avmm_mmio_waitrequest),                      //  output,   width = 1,       .waitrequest
		.s_burst         (avmm_mmio_burstcount),                       //   input,   width = 1,       .burstcount
		.m_address       (matmul_afu_csr_bridge_master_address),       //  output,  width = 48, master.address
		.m_writedata     (matmul_afu_csr_bridge_master_writedata),     //  output,  width = 64,       .writedata
		.m_byteenable    (matmul_afu_csr_bridge_master_byteenable),    //  output,   width = 8,       .byteenable
		.m_burst         (matmul_afu_csr_bridge_master_burstcount),    //  output,   width = 1,       .burstcount
		.m_write         (matmul_afu_csr_bridge_master_write),         //  output,   width = 1,       .write
		.m_read          (matmul_afu_csr_bridge_master_read),          //  output,   width = 1,       .read
		.m_readdata      (matmul_afu_csr_bridge_master_readdata),      //   input,  width = 64,       .readdata
		.m_readdatavalid (matmul_afu_csr_bridge_master_readdatavalid), //   input,   width = 1,       .readdatavalid
		.m_waitrequest   (matmul_afu_csr_bridge_master_waitrequest)    //   input,   width = 1,       .waitrequest
	);

	matmul_afu_ddr4_bridge matmul_afu_ddr4_bridge (
		.clk              (matmul_afu_dma_clock_out_clk_clk),                          //   input,    width = 1,   clk.clk
		.reset            (matmul_afu_dma_rst_out_reset_reset),                        //   input,    width = 1, reset.reset
		.s0_waitrequest   (mm_interconnect_2_matmul_afu_ddr4_bridge_s0_waitrequest),   //  output,    width = 1,    s0.waitrequest
		.s0_readdata      (mm_interconnect_2_matmul_afu_ddr4_bridge_s0_readdata),      //  output,  width = 512,      .readdata
		.s0_readdatavalid (mm_interconnect_2_matmul_afu_ddr4_bridge_s0_readdatavalid), //  output,    width = 1,      .readdatavalid
		.s0_burstcount    (mm_interconnect_2_matmul_afu_ddr4_bridge_s0_burstcount),    //   input,    width = 3,      .burstcount
		.s0_writedata     (mm_interconnect_2_matmul_afu_ddr4_bridge_s0_writedata),     //   input,  width = 512,      .writedata
		.s0_address       (mm_interconnect_2_matmul_afu_ddr4_bridge_s0_address),       //   input,   width = 33,      .address
		.s0_write         (mm_interconnect_2_matmul_afu_ddr4_bridge_s0_write),         //   input,    width = 1,      .write
		.s0_read          (mm_interconnect_2_matmul_afu_ddr4_bridge_s0_read),          //   input,    width = 1,      .read
		.s0_byteenable    (mm_interconnect_2_matmul_afu_ddr4_bridge_s0_byteenable),    //   input,   width = 64,      .byteenable
		.s0_debugaccess   (mm_interconnect_2_matmul_afu_ddr4_bridge_s0_debugaccess),   //   input,    width = 1,      .debugaccess
		.m0_waitrequest   (ddr4a_master_dma_waitrequest),                              //   input,    width = 1,    m0.waitrequest
		.m0_readdata      (ddr4a_master_dma_readdata),                                 //   input,  width = 512,      .readdata
		.m0_readdatavalid (ddr4a_master_dma_readdatavalid),                            //   input,    width = 1,      .readdatavalid
		.m0_burstcount    (ddr4a_master_dma_burstcount),                               //  output,    width = 3,      .burstcount
		.m0_writedata     (ddr4a_master_dma_writedata),                                //  output,  width = 512,      .writedata
		.m0_address       (ddr4a_master_dma_address),                                  //  output,   width = 33,      .address
		.m0_write         (ddr4a_master_dma_write),                                    //  output,    width = 1,      .write
		.m0_read          (ddr4a_master_dma_read),                                     //  output,    width = 1,      .read
		.m0_byteenable    (ddr4a_master_dma_byteenable),                               //  output,   width = 64,      .byteenable
		.m0_debugaccess   (ddr4a_master_dma_debugaccess)                               //  output,    width = 1,      .debugaccess
	);

	matmul_afu_dma_clock matmul_afu_dma_clock (
		.in_clk  (dma_clk_clk),                      //   input,  width = 1,  in_clk.clk
		.out_clk (matmul_afu_dma_clock_out_clk_clk)  //  output,  width = 1, out_clk.clk
	);

	matmul_afu_dma_rst matmul_afu_dma_rst (
		.clk       (matmul_afu_dma_clock_out_clk_clk),   //   input,  width = 1,       clk.clk
		.in_reset  (dma_reset_reset),                    //   input,  width = 1,  in_reset.reset
		.out_reset (matmul_afu_dma_rst_out_reset_reset)  //  output,  width = 1, out_reset.reset
	);

	matmul_afu_farreach_read matmul_afu_farreach_read (
		.s_clk           (matmul_afu_dma_clock_out_clk_clk),   //   input,    width = 1,    clk.clk
		.reset           (matmul_afu_dma_rst_out_reset_reset), //   input,    width = 1,  reset.reset
		.s_address       (msgdma_bbb_host_read_address),       //   input,   width = 48,  slave.address
		.s_byteenable    (msgdma_bbb_host_read_byteenable),    //   input,   width = 64,       .byteenable
		.s_read          (msgdma_bbb_host_read_read),          //   input,    width = 1,       .read
		.s_readdata      (msgdma_bbb_host_read_readdata),      //  output,  width = 512,       .readdata
		.s_readdatavalid (msgdma_bbb_host_read_readdatavalid), //  output,    width = 1,       .readdatavalid
		.s_waitrequest   (msgdma_bbb_host_read_waitrequest),   //  output,    width = 1,       .waitrequest
		.s_burst         (msgdma_bbb_host_read_burstcount),    //   input,    width = 3,       .burstcount
		.m_address       (host_read_address),                  //  output,   width = 48, master.address
		.m_byteenable    (host_read_byteenable),               //  output,   width = 64,       .byteenable
		.m_burst         (host_read_burstcount),               //  output,    width = 3,       .burstcount
		.m_read          (host_read_read),                     //  output,    width = 1,       .read
		.m_readdata      (host_read_readdata),                 //   input,  width = 512,       .readdata
		.m_readdatavalid (host_read_readdatavalid),            //   input,    width = 1,       .readdatavalid
		.m_waitrequest   (host_read_waitrequest)               //   input,    width = 1,       .waitrequest
	);

	matmul_afu_farreach_write matmul_afu_farreach_write (
		.s_clk                (matmul_afu_dma_clock_out_clk_clk),         //   input,    width = 1,    clk.clk
		.reset                (matmul_afu_dma_rst_out_reset_reset),       //   input,    width = 1,  reset.reset
		.s_address            (msgdma_bbb_host_write_address),            //   input,   width = 48,  slave.address
		.s_writedata          (msgdma_bbb_host_write_writedata),          //   input,  width = 512,       .writedata
		.s_byteenable         (msgdma_bbb_host_write_byteenable),         //   input,   width = 64,       .byteenable
		.s_write              (msgdma_bbb_host_write_write),              //   input,    width = 1,       .write
		.s_response           (msgdma_bbb_host_write_response),           //  output,    width = 2,       .response
		.s_writeresponsevalid (msgdma_bbb_host_write_writeresponsevalid), //  output,    width = 1,       .writeresponsevalid
		.s_waitrequest        (msgdma_bbb_host_write_waitrequest),        //  output,    width = 1,       .waitrequest
		.s_burst              (msgdma_bbb_host_write_burstcount),         //   input,    width = 3,       .burstcount
		.m_address            (host_write_address),                       //  output,   width = 48, master.address
		.m_writedata          (host_write_writedata),                     //  output,  width = 512,       .writedata
		.m_byteenable         (host_write_byteenable),                    //  output,   width = 64,       .byteenable
		.m_burst              (host_write_burstcount),                    //  output,    width = 3,       .burstcount
		.m_write              (host_write_write),                         //  output,    width = 1,       .write
		.m_response           (host_write_response),                      //   input,    width = 2,       .response
		.m_writeresponsevalid (host_write_writeresponsevalid),            //   input,    width = 1,       .writeresponsevalid
		.m_waitrequest        (host_write_waitrequest)                    //   input,    width = 1,       .waitrequest
	);

	matmul_afu_id_afu matmul_afu_id_afu (
		.clk            (matmul_afu_dma_clock_out_clk_clk),                            //   input,   width = 1,         clock.clk
		.reset          (matmul_afu_dma_rst_out_reset_reset),                          //   input,   width = 1,         reset.reset
		.avmm_readdata  (mm_interconnect_3_matmul_afu_id_afu_afu_cfg_slave_readdata),  //  output,  width = 64, afu_cfg_slave.readdata
		.avmm_writedata (mm_interconnect_3_matmul_afu_id_afu_afu_cfg_slave_writedata), //   input,  width = 64,              .writedata
		.avmm_address   (mm_interconnect_3_matmul_afu_id_afu_afu_cfg_slave_address),   //   input,   width = 3,              .address
		.avmm_write     (mm_interconnect_3_matmul_afu_id_afu_afu_cfg_slave_write),     //   input,   width = 1,              .write
		.avmm_read      (mm_interconnect_3_matmul_afu_id_afu_afu_cfg_slave_read)       //   input,   width = 1,              .read
	);

	matmul_afu_id_dma matmul_afu_id_dma (
		.clk            (matmul_afu_dma_clock_out_clk_clk),                            //   input,   width = 1,         clock.clk
		.reset          (matmul_afu_dma_rst_out_reset_reset),                          //   input,   width = 1,         reset.reset
		.avmm_readdata  (mm_interconnect_3_matmul_afu_id_dma_afu_cfg_slave_readdata),  //  output,  width = 64, afu_cfg_slave.readdata
		.avmm_writedata (mm_interconnect_3_matmul_afu_id_dma_afu_cfg_slave_writedata), //   input,  width = 64,              .writedata
		.avmm_address   (mm_interconnect_3_matmul_afu_id_dma_afu_cfg_slave_address),   //   input,   width = 3,              .address
		.avmm_write     (mm_interconnect_3_matmul_afu_id_dma_afu_cfg_slave_write),     //   input,   width = 1,              .write
		.avmm_read      (mm_interconnect_3_matmul_afu_id_dma_afu_cfg_slave_read)       //   input,   width = 1,              .read
	);

	matmul_afu_id_matmul matmul_afu_id_matmul (
		.clk            (matmul_afu_dma_clock_out_clk_clk),                               //   input,   width = 1,         clock.clk
		.reset          (matmul_afu_dma_rst_out_reset_reset),                             //   input,   width = 1,         reset.reset
		.avmm_readdata  (mm_interconnect_3_matmul_afu_id_matmul_afu_cfg_slave_readdata),  //  output,  width = 64, afu_cfg_slave.readdata
		.avmm_writedata (mm_interconnect_3_matmul_afu_id_matmul_afu_cfg_slave_writedata), //   input,  width = 64,              .writedata
		.avmm_address   (mm_interconnect_3_matmul_afu_id_matmul_afu_cfg_slave_address),   //   input,   width = 3,              .address
		.avmm_write     (mm_interconnect_3_matmul_afu_id_matmul_afu_cfg_slave_write),     //   input,   width = 1,              .write
		.avmm_read      (mm_interconnect_3_matmul_afu_id_matmul_afu_cfg_slave_read)       //   input,   width = 1,              .read
	);

	matmul_afu_matmul_clock matmul_afu_matmul_clock (
		.in_clk  (matmul_clk_clk),                      //   input,  width = 1,  in_clk.clk
		.out_clk (matmul_afu_matmul_clock_out_clk_clk)  //  output,  width = 1, out_clk.clk
	);

	matmul_afu_matmul_ddr4a_bridge matmul_afu_matmul_ddr4a_bridge (
		.clk              (matmul_afu_matmul_clock_out_clk_clk),             //   input,   width = 1,   clk.clk
		.reset            (rst_controller_reset_out_reset),                  //   input,   width = 1, reset.reset
		.s0_waitrequest   (ddr4a_slave_matmul_waitrequest),                  //  output,   width = 1,    s0.waitrequest
		.s0_readdata      (ddr4a_slave_matmul_readdata),                     //  output,   width = 8,      .readdata
		.s0_readdatavalid (ddr4a_slave_matmul_readdatavalid),                //  output,   width = 1,      .readdatavalid
		.s0_burstcount    (ddr4a_slave_matmul_burstcount),                   //   input,   width = 1,      .burstcount
		.s0_writedata     (ddr4a_slave_matmul_writedata),                    //   input,   width = 8,      .writedata
		.s0_address       (ddr4a_slave_matmul_address),                      //   input,  width = 33,      .address
		.s0_write         (ddr4a_slave_matmul_write),                        //   input,   width = 1,      .write
		.s0_read          (ddr4a_slave_matmul_read),                         //   input,   width = 1,      .read
		.s0_byteenable    (ddr4a_slave_matmul_byteenable),                   //   input,   width = 1,      .byteenable
		.s0_debugaccess   (ddr4a_slave_matmul_debugaccess),                  //   input,   width = 1,      .debugaccess
		.m0_waitrequest   (matmul_afu_matmul_ddr4a_bridge_m0_waitrequest),   //   input,   width = 1,    m0.waitrequest
		.m0_readdata      (matmul_afu_matmul_ddr4a_bridge_m0_readdata),      //   input,   width = 8,      .readdata
		.m0_readdatavalid (matmul_afu_matmul_ddr4a_bridge_m0_readdatavalid), //   input,   width = 1,      .readdatavalid
		.m0_burstcount    (matmul_afu_matmul_ddr4a_bridge_m0_burstcount),    //  output,   width = 1,      .burstcount
		.m0_writedata     (matmul_afu_matmul_ddr4a_bridge_m0_writedata),     //  output,   width = 8,      .writedata
		.m0_address       (matmul_afu_matmul_ddr4a_bridge_m0_address),       //  output,  width = 33,      .address
		.m0_write         (matmul_afu_matmul_ddr4a_bridge_m0_write),         //  output,   width = 1,      .write
		.m0_read          (matmul_afu_matmul_ddr4a_bridge_m0_read),          //  output,   width = 1,      .read
		.m0_byteenable    (matmul_afu_matmul_ddr4a_bridge_m0_byteenable),    //  output,   width = 1,      .byteenable
		.m0_debugaccess   (matmul_afu_matmul_ddr4a_bridge_m0_debugaccess)    //  output,   width = 1,      .debugaccess
	);

	matmul_afu_matmul_ready matmul_afu_matmul_ready (
		.clk        (matmul_afu_matmul_clock_out_clk_clk),                     //   input,   width = 1,                 clk.clk
		.reset_n    (~rst_controller_001_reset_out_reset),                     //   input,   width = 1,               reset.reset_n
		.address    (mm_interconnect_3_matmul_afu_matmul_ready_s1_address),    //   input,   width = 2,                  s1.address
		.write_n    (~mm_interconnect_3_matmul_afu_matmul_ready_s1_write),     //   input,   width = 1,                    .write_n
		.writedata  (mm_interconnect_3_matmul_afu_matmul_ready_s1_writedata),  //   input,  width = 32,                    .writedata
		.chipselect (mm_interconnect_3_matmul_afu_matmul_ready_s1_chipselect), //   input,   width = 1,                    .chipselect
		.readdata   (mm_interconnect_3_matmul_afu_matmul_ready_s1_readdata),   //  output,  width = 32,                    .readdata
		.in_port    (matmul_ready_export)                                      //   input,  width = 32, external_connection.export
	);

	matmul_afu_matmul_rst matmul_afu_matmul_rst (
		.clk       (matmul_afu_matmul_clock_out_clk_clk), //   input,  width = 1,       clk.clk
		.in_reset  (rst_controller_reset_out_reset),      //   input,  width = 1,  in_reset.reset
		.out_reset (matmul_reset_reset)                   //  output,  width = 1, out_reset.reset
	);

	matmul_afu_pgm_ram matmul_afu_pgm_ram (
		.address     (mm_interconnect_3_matmul_afu_pgm_ram_s1_address),    //   input,   width = 6,     s1.address
		.clken       (mm_interconnect_3_matmul_afu_pgm_ram_s1_clken),      //   input,   width = 1,       .clken
		.chipselect  (mm_interconnect_3_matmul_afu_pgm_ram_s1_chipselect), //   input,   width = 1,       .chipselect
		.write       (mm_interconnect_3_matmul_afu_pgm_ram_s1_write),      //   input,   width = 1,       .write
		.readdata    (mm_interconnect_3_matmul_afu_pgm_ram_s1_readdata),   //  output,  width = 64,       .readdata
		.writedata   (mm_interconnect_3_matmul_afu_pgm_ram_s1_writedata),  //   input,  width = 64,       .writedata
		.byteenable  (mm_interconnect_3_matmul_afu_pgm_ram_s1_byteenable), //   input,   width = 8,       .byteenable
		.address2    (matmul_pgm_ram_address),                             //   input,   width = 6,     s2.address
		.chipselect2 (matmul_pgm_ram_chipselect),                          //   input,   width = 1,       .chipselect
		.clken2      (matmul_pgm_ram_clken),                               //   input,   width = 1,       .clken
		.write2      (matmul_pgm_ram_write),                               //   input,   width = 1,       .write
		.readdata2   (matmul_pgm_ram_readdata),                            //  output,  width = 64,       .readdata
		.writedata2  (matmul_pgm_ram_writedata),                           //   input,  width = 64,       .writedata
		.byteenable2 (matmul_pgm_ram_byteenable),                          //   input,   width = 8,       .byteenable
		.clk         (matmul_afu_matmul_clock_out_clk_clk),                //   input,   width = 1,   clk1.clk
		.reset       (rst_controller_001_reset_out_reset)                  //   input,   width = 1, reset1.reset
	);

	matmul_afu_start_matmul matmul_afu_start_matmul (
		.clk        (matmul_afu_matmul_clock_out_clk_clk),                     //   input,   width = 1,                 clk.clk
		.reset_n    (~rst_controller_001_reset_out_reset),                     //   input,   width = 1,               reset.reset_n
		.address    (mm_interconnect_3_matmul_afu_start_matmul_s1_address),    //   input,   width = 2,                  s1.address
		.write_n    (~mm_interconnect_3_matmul_afu_start_matmul_s1_write),     //   input,   width = 1,                    .write_n
		.writedata  (mm_interconnect_3_matmul_afu_start_matmul_s1_writedata),  //   input,  width = 32,                    .writedata
		.chipselect (mm_interconnect_3_matmul_afu_start_matmul_s1_chipselect), //   input,   width = 1,                    .chipselect
		.readdata   (mm_interconnect_3_matmul_afu_start_matmul_s1_readdata),   //  output,  width = 32,                    .readdata
		.out_port   (matmul_start_export)                                      //  output,  width = 32, external_connection.export
	);

	msgdma_bbb msgdma_bbb (
		.clk_clk                       (matmul_afu_dma_clock_out_clk_clk),               //   input,    width = 1,            clk.clk
		.csr_address                   (mm_interconnect_3_msgdma_bbb_csr_address),       //   input,    width = 8,            csr.address
		.csr_writedata                 (mm_interconnect_3_msgdma_bbb_csr_writedata),     //   input,   width = 64,               .writedata
		.csr_byteenable                (mm_interconnect_3_msgdma_bbb_csr_byteenable),    //   input,    width = 8,               .byteenable
		.csr_write                     (mm_interconnect_3_msgdma_bbb_csr_write),         //   input,    width = 1,               .write
		.csr_read                      (mm_interconnect_3_msgdma_bbb_csr_read),          //   input,    width = 1,               .read
		.csr_readdata                  (mm_interconnect_3_msgdma_bbb_csr_readdata),      //  output,   width = 64,               .readdata
		.csr_readdatavalid             (mm_interconnect_3_msgdma_bbb_csr_readdatavalid), //  output,    width = 1,               .readdatavalid
		.csr_waitrequest               (mm_interconnect_3_msgdma_bbb_csr_waitrequest),   //  output,    width = 1,               .waitrequest
		.csr_burstcount                (mm_interconnect_3_msgdma_bbb_csr_burstcount),    //   input,    width = 1,               .burstcount
		.host_read_address             (msgdma_bbb_host_read_address),                   //  output,   width = 48,      host_read.address
		.host_read_byteenable          (msgdma_bbb_host_read_byteenable),                //  output,   width = 64,               .byteenable
		.host_read_burstcount          (msgdma_bbb_host_read_burstcount),                //  output,    width = 3,               .burstcount
		.host_read_read                (msgdma_bbb_host_read_read),                      //  output,    width = 1,               .read
		.host_read_readdata            (msgdma_bbb_host_read_readdata),                  //   input,  width = 512,               .readdata
		.host_read_readdatavalid       (msgdma_bbb_host_read_readdatavalid),             //   input,    width = 1,               .readdatavalid
		.host_read_waitrequest         (msgdma_bbb_host_read_waitrequest),               //   input,    width = 1,               .waitrequest
		.host_write_address            (msgdma_bbb_host_write_address),                  //  output,   width = 48,     host_write.address
		.host_write_writedata          (msgdma_bbb_host_write_writedata),                //  output,  width = 512,               .writedata
		.host_write_byteenable         (msgdma_bbb_host_write_byteenable),               //  output,   width = 64,               .byteenable
		.host_write_burstcount         (msgdma_bbb_host_write_burstcount),               //  output,    width = 3,               .burstcount
		.host_write_write              (msgdma_bbb_host_write_write),                    //  output,    width = 1,               .write
		.host_write_response           (msgdma_bbb_host_write_response),                 //   input,    width = 2,               .response
		.host_write_writeresponsevalid (msgdma_bbb_host_write_writeresponsevalid),       //   input,    width = 1,               .writeresponsevalid
		.host_write_waitrequest        (msgdma_bbb_host_write_waitrequest),              //   input,    width = 1,               .waitrequest
		.mem_read_write_address        (msgdma_bbb_mem_read_write_address),              //  output,   width = 48, mem_read_write.address
		.mem_read_write_writedata      (msgdma_bbb_mem_read_write_writedata),            //  output,  width = 512,               .writedata
		.mem_read_write_byteenable     (msgdma_bbb_mem_read_write_byteenable),           //  output,   width = 64,               .byteenable
		.mem_read_write_burstcount     (msgdma_bbb_mem_read_write_burstcount),           //  output,    width = 3,               .burstcount
		.mem_read_write_write          (msgdma_bbb_mem_read_write_write),                //  output,    width = 1,               .write
		.mem_read_write_read           (msgdma_bbb_mem_read_write_read),                 //  output,    width = 1,               .read
		.mem_read_write_readdata       (msgdma_bbb_mem_read_write_readdata),             //   input,  width = 512,               .readdata
		.mem_read_write_readdatavalid  (msgdma_bbb_mem_read_write_readdatavalid),        //   input,    width = 1,               .readdatavalid
		.mem_read_write_waitrequest    (msgdma_bbb_mem_read_write_waitrequest),          //   input,    width = 1,               .waitrequest
		.reset_reset                   (matmul_afu_dma_rst_out_reset_reset)              //   input,    width = 1,          reset.reset
	);

	matmul_afu_system_fixed_altera_mm_interconnect_191_zhzsq6q mm_interconnect_2 (
		.matmul_afu_matmul_ddr4a_bridge_m0_address                                      (matmul_afu_matmul_ddr4a_bridge_m0_address),                 //   input,   width = 33,                                        matmul_afu_matmul_ddr4a_bridge_m0.address
		.matmul_afu_matmul_ddr4a_bridge_m0_waitrequest                                  (matmul_afu_matmul_ddr4a_bridge_m0_waitrequest),             //  output,    width = 1,                                                                         .waitrequest
		.matmul_afu_matmul_ddr4a_bridge_m0_burstcount                                   (matmul_afu_matmul_ddr4a_bridge_m0_burstcount),              //   input,    width = 1,                                                                         .burstcount
		.matmul_afu_matmul_ddr4a_bridge_m0_byteenable                                   (matmul_afu_matmul_ddr4a_bridge_m0_byteenable),              //   input,    width = 1,                                                                         .byteenable
		.matmul_afu_matmul_ddr4a_bridge_m0_read                                         (matmul_afu_matmul_ddr4a_bridge_m0_read),                    //   input,    width = 1,                                                                         .read
		.matmul_afu_matmul_ddr4a_bridge_m0_readdata                                     (matmul_afu_matmul_ddr4a_bridge_m0_readdata),                //  output,    width = 8,                                                                         .readdata
		.matmul_afu_matmul_ddr4a_bridge_m0_readdatavalid                                (matmul_afu_matmul_ddr4a_bridge_m0_readdatavalid),           //  output,    width = 1,                                                                         .readdatavalid
		.matmul_afu_matmul_ddr4a_bridge_m0_write                                        (matmul_afu_matmul_ddr4a_bridge_m0_write),                   //   input,    width = 1,                                                                         .write
		.matmul_afu_matmul_ddr4a_bridge_m0_writedata                                    (matmul_afu_matmul_ddr4a_bridge_m0_writedata),               //   input,    width = 8,                                                                         .writedata
		.matmul_afu_matmul_ddr4a_bridge_m0_debugaccess                                  (matmul_afu_matmul_ddr4a_bridge_m0_debugaccess),             //   input,    width = 1,                                                                         .debugaccess
		.msgdma_bbb_mem_read_write_address                                              (msgdma_bbb_mem_read_write_address),                         //   input,   width = 48,                                                msgdma_bbb_mem_read_write.address
		.msgdma_bbb_mem_read_write_waitrequest                                          (msgdma_bbb_mem_read_write_waitrequest),                     //  output,    width = 1,                                                                         .waitrequest
		.msgdma_bbb_mem_read_write_burstcount                                           (msgdma_bbb_mem_read_write_burstcount),                      //   input,    width = 3,                                                                         .burstcount
		.msgdma_bbb_mem_read_write_byteenable                                           (msgdma_bbb_mem_read_write_byteenable),                      //   input,   width = 64,                                                                         .byteenable
		.msgdma_bbb_mem_read_write_read                                                 (msgdma_bbb_mem_read_write_read),                            //   input,    width = 1,                                                                         .read
		.msgdma_bbb_mem_read_write_readdata                                             (msgdma_bbb_mem_read_write_readdata),                        //  output,  width = 512,                                                                         .readdata
		.msgdma_bbb_mem_read_write_readdatavalid                                        (msgdma_bbb_mem_read_write_readdatavalid),                   //  output,    width = 1,                                                                         .readdatavalid
		.msgdma_bbb_mem_read_write_write                                                (msgdma_bbb_mem_read_write_write),                           //   input,    width = 1,                                                                         .write
		.msgdma_bbb_mem_read_write_writedata                                            (msgdma_bbb_mem_read_write_writedata),                       //   input,  width = 512,                                                                         .writedata
		.matmul_afu_ddr4_bridge_s0_address                                              (mm_interconnect_2_matmul_afu_ddr4_bridge_s0_address),       //  output,   width = 33,                                                matmul_afu_ddr4_bridge_s0.address
		.matmul_afu_ddr4_bridge_s0_write                                                (mm_interconnect_2_matmul_afu_ddr4_bridge_s0_write),         //  output,    width = 1,                                                                         .write
		.matmul_afu_ddr4_bridge_s0_read                                                 (mm_interconnect_2_matmul_afu_ddr4_bridge_s0_read),          //  output,    width = 1,                                                                         .read
		.matmul_afu_ddr4_bridge_s0_readdata                                             (mm_interconnect_2_matmul_afu_ddr4_bridge_s0_readdata),      //   input,  width = 512,                                                                         .readdata
		.matmul_afu_ddr4_bridge_s0_writedata                                            (mm_interconnect_2_matmul_afu_ddr4_bridge_s0_writedata),     //  output,  width = 512,                                                                         .writedata
		.matmul_afu_ddr4_bridge_s0_burstcount                                           (mm_interconnect_2_matmul_afu_ddr4_bridge_s0_burstcount),    //  output,    width = 3,                                                                         .burstcount
		.matmul_afu_ddr4_bridge_s0_byteenable                                           (mm_interconnect_2_matmul_afu_ddr4_bridge_s0_byteenable),    //  output,   width = 64,                                                                         .byteenable
		.matmul_afu_ddr4_bridge_s0_readdatavalid                                        (mm_interconnect_2_matmul_afu_ddr4_bridge_s0_readdatavalid), //   input,    width = 1,                                                                         .readdatavalid
		.matmul_afu_ddr4_bridge_s0_waitrequest                                          (mm_interconnect_2_matmul_afu_ddr4_bridge_s0_waitrequest),   //   input,    width = 1,                                                                         .waitrequest
		.matmul_afu_ddr4_bridge_s0_debugaccess                                          (mm_interconnect_2_matmul_afu_ddr4_bridge_s0_debugaccess),   //  output,    width = 1,                                                                         .debugaccess
		.matmul_afu_ddr4_bridge_reset_reset_bridge_in_reset_reset                       (matmul_afu_dma_rst_out_reset_reset),                        //   input,    width = 1,                       matmul_afu_ddr4_bridge_reset_reset_bridge_in_reset.reset
		.matmul_afu_matmul_ddr4a_bridge_m0_translator_reset_reset_bridge_in_reset_reset (rst_controller_001_reset_out_reset),                        //   input,    width = 1, matmul_afu_matmul_ddr4a_bridge_m0_translator_reset_reset_bridge_in_reset.reset
		.matmul_afu_matmul_clock_out_clk_clk                                            (matmul_afu_matmul_clock_out_clk_clk),                       //   input,    width = 1,                                          matmul_afu_matmul_clock_out_clk.clk
		.matmul_afu_dma_clock_out_clk_clk                                               (matmul_afu_dma_clock_out_clk_clk)                           //   input,    width = 1,                                             matmul_afu_dma_clock_out_clk.clk
	);

	matmul_afu_system_fixed_altera_mm_interconnect_191_qwuhnzy mm_interconnect_3 (
		.matmul_afu_csr_bridge_master_address                                      (matmul_afu_csr_bridge_master_address),                           //   input,  width = 48,                                        matmul_afu_csr_bridge_master.address
		.matmul_afu_csr_bridge_master_waitrequest                                  (matmul_afu_csr_bridge_master_waitrequest),                       //  output,   width = 1,                                                                    .waitrequest
		.matmul_afu_csr_bridge_master_burstcount                                   (matmul_afu_csr_bridge_master_burstcount),                        //   input,   width = 1,                                                                    .burstcount
		.matmul_afu_csr_bridge_master_byteenable                                   (matmul_afu_csr_bridge_master_byteenable),                        //   input,   width = 8,                                                                    .byteenable
		.matmul_afu_csr_bridge_master_read                                         (matmul_afu_csr_bridge_master_read),                              //   input,   width = 1,                                                                    .read
		.matmul_afu_csr_bridge_master_readdata                                     (matmul_afu_csr_bridge_master_readdata),                          //  output,  width = 64,                                                                    .readdata
		.matmul_afu_csr_bridge_master_readdatavalid                                (matmul_afu_csr_bridge_master_readdatavalid),                     //  output,   width = 1,                                                                    .readdatavalid
		.matmul_afu_csr_bridge_master_write                                        (matmul_afu_csr_bridge_master_write),                             //   input,   width = 1,                                                                    .write
		.matmul_afu_csr_bridge_master_writedata                                    (matmul_afu_csr_bridge_master_writedata),                         //   input,  width = 64,                                                                    .writedata
		.matmul_afu_id_afu_afu_cfg_slave_address                                   (mm_interconnect_3_matmul_afu_id_afu_afu_cfg_slave_address),      //  output,   width = 3,                                     matmul_afu_id_afu_afu_cfg_slave.address
		.matmul_afu_id_afu_afu_cfg_slave_write                                     (mm_interconnect_3_matmul_afu_id_afu_afu_cfg_slave_write),        //  output,   width = 1,                                                                    .write
		.matmul_afu_id_afu_afu_cfg_slave_read                                      (mm_interconnect_3_matmul_afu_id_afu_afu_cfg_slave_read),         //  output,   width = 1,                                                                    .read
		.matmul_afu_id_afu_afu_cfg_slave_readdata                                  (mm_interconnect_3_matmul_afu_id_afu_afu_cfg_slave_readdata),     //   input,  width = 64,                                                                    .readdata
		.matmul_afu_id_afu_afu_cfg_slave_writedata                                 (mm_interconnect_3_matmul_afu_id_afu_afu_cfg_slave_writedata),    //  output,  width = 64,                                                                    .writedata
		.matmul_afu_id_matmul_afu_cfg_slave_address                                (mm_interconnect_3_matmul_afu_id_matmul_afu_cfg_slave_address),   //  output,   width = 3,                                  matmul_afu_id_matmul_afu_cfg_slave.address
		.matmul_afu_id_matmul_afu_cfg_slave_write                                  (mm_interconnect_3_matmul_afu_id_matmul_afu_cfg_slave_write),     //  output,   width = 1,                                                                    .write
		.matmul_afu_id_matmul_afu_cfg_slave_read                                   (mm_interconnect_3_matmul_afu_id_matmul_afu_cfg_slave_read),      //  output,   width = 1,                                                                    .read
		.matmul_afu_id_matmul_afu_cfg_slave_readdata                               (mm_interconnect_3_matmul_afu_id_matmul_afu_cfg_slave_readdata),  //   input,  width = 64,                                                                    .readdata
		.matmul_afu_id_matmul_afu_cfg_slave_writedata                              (mm_interconnect_3_matmul_afu_id_matmul_afu_cfg_slave_writedata), //  output,  width = 64,                                                                    .writedata
		.matmul_afu_id_dma_afu_cfg_slave_address                                   (mm_interconnect_3_matmul_afu_id_dma_afu_cfg_slave_address),      //  output,   width = 3,                                     matmul_afu_id_dma_afu_cfg_slave.address
		.matmul_afu_id_dma_afu_cfg_slave_write                                     (mm_interconnect_3_matmul_afu_id_dma_afu_cfg_slave_write),        //  output,   width = 1,                                                                    .write
		.matmul_afu_id_dma_afu_cfg_slave_read                                      (mm_interconnect_3_matmul_afu_id_dma_afu_cfg_slave_read),         //  output,   width = 1,                                                                    .read
		.matmul_afu_id_dma_afu_cfg_slave_readdata                                  (mm_interconnect_3_matmul_afu_id_dma_afu_cfg_slave_readdata),     //   input,  width = 64,                                                                    .readdata
		.matmul_afu_id_dma_afu_cfg_slave_writedata                                 (mm_interconnect_3_matmul_afu_id_dma_afu_cfg_slave_writedata),    //  output,  width = 64,                                                                    .writedata
		.msgdma_bbb_csr_address                                                    (mm_interconnect_3_msgdma_bbb_csr_address),                       //  output,   width = 8,                                                      msgdma_bbb_csr.address
		.msgdma_bbb_csr_write                                                      (mm_interconnect_3_msgdma_bbb_csr_write),                         //  output,   width = 1,                                                                    .write
		.msgdma_bbb_csr_read                                                       (mm_interconnect_3_msgdma_bbb_csr_read),                          //  output,   width = 1,                                                                    .read
		.msgdma_bbb_csr_readdata                                                   (mm_interconnect_3_msgdma_bbb_csr_readdata),                      //   input,  width = 64,                                                                    .readdata
		.msgdma_bbb_csr_writedata                                                  (mm_interconnect_3_msgdma_bbb_csr_writedata),                     //  output,  width = 64,                                                                    .writedata
		.msgdma_bbb_csr_burstcount                                                 (mm_interconnect_3_msgdma_bbb_csr_burstcount),                    //  output,   width = 1,                                                                    .burstcount
		.msgdma_bbb_csr_byteenable                                                 (mm_interconnect_3_msgdma_bbb_csr_byteenable),                    //  output,   width = 8,                                                                    .byteenable
		.msgdma_bbb_csr_readdatavalid                                              (mm_interconnect_3_msgdma_bbb_csr_readdatavalid),                 //   input,   width = 1,                                                                    .readdatavalid
		.msgdma_bbb_csr_waitrequest                                                (mm_interconnect_3_msgdma_bbb_csr_waitrequest),                   //   input,   width = 1,                                                                    .waitrequest
		.matmul_afu_start_matmul_s1_address                                        (mm_interconnect_3_matmul_afu_start_matmul_s1_address),           //  output,   width = 2,                                          matmul_afu_start_matmul_s1.address
		.matmul_afu_start_matmul_s1_write                                          (mm_interconnect_3_matmul_afu_start_matmul_s1_write),             //  output,   width = 1,                                                                    .write
		.matmul_afu_start_matmul_s1_readdata                                       (mm_interconnect_3_matmul_afu_start_matmul_s1_readdata),          //   input,  width = 32,                                                                    .readdata
		.matmul_afu_start_matmul_s1_writedata                                      (mm_interconnect_3_matmul_afu_start_matmul_s1_writedata),         //  output,  width = 32,                                                                    .writedata
		.matmul_afu_start_matmul_s1_chipselect                                     (mm_interconnect_3_matmul_afu_start_matmul_s1_chipselect),        //  output,   width = 1,                                                                    .chipselect
		.matmul_afu_matmul_ready_s1_address                                        (mm_interconnect_3_matmul_afu_matmul_ready_s1_address),           //  output,   width = 2,                                          matmul_afu_matmul_ready_s1.address
		.matmul_afu_matmul_ready_s1_write                                          (mm_interconnect_3_matmul_afu_matmul_ready_s1_write),             //  output,   width = 1,                                                                    .write
		.matmul_afu_matmul_ready_s1_readdata                                       (mm_interconnect_3_matmul_afu_matmul_ready_s1_readdata),          //   input,  width = 32,                                                                    .readdata
		.matmul_afu_matmul_ready_s1_writedata                                      (mm_interconnect_3_matmul_afu_matmul_ready_s1_writedata),         //  output,  width = 32,                                                                    .writedata
		.matmul_afu_matmul_ready_s1_chipselect                                     (mm_interconnect_3_matmul_afu_matmul_ready_s1_chipselect),        //  output,   width = 1,                                                                    .chipselect
		.matmul_afu_pgm_ram_s1_address                                             (mm_interconnect_3_matmul_afu_pgm_ram_s1_address),                //  output,   width = 6,                                               matmul_afu_pgm_ram_s1.address
		.matmul_afu_pgm_ram_s1_write                                               (mm_interconnect_3_matmul_afu_pgm_ram_s1_write),                  //  output,   width = 1,                                                                    .write
		.matmul_afu_pgm_ram_s1_readdata                                            (mm_interconnect_3_matmul_afu_pgm_ram_s1_readdata),               //   input,  width = 64,                                                                    .readdata
		.matmul_afu_pgm_ram_s1_writedata                                           (mm_interconnect_3_matmul_afu_pgm_ram_s1_writedata),              //  output,  width = 64,                                                                    .writedata
		.matmul_afu_pgm_ram_s1_byteenable                                          (mm_interconnect_3_matmul_afu_pgm_ram_s1_byteenable),             //  output,   width = 8,                                                                    .byteenable
		.matmul_afu_pgm_ram_s1_chipselect                                          (mm_interconnect_3_matmul_afu_pgm_ram_s1_chipselect),             //  output,   width = 1,                                                                    .chipselect
		.matmul_afu_pgm_ram_s1_clken                                               (mm_interconnect_3_matmul_afu_pgm_ram_s1_clken),                  //  output,   width = 1,                                                                    .clken
		.matmul_afu_start_matmul_reset_reset_bridge_in_reset_reset                 (rst_controller_001_reset_out_reset),                             //   input,   width = 1,                 matmul_afu_start_matmul_reset_reset_bridge_in_reset.reset
		.matmul_afu_csr_bridge_master_translator_reset_reset_bridge_in_reset_reset (matmul_afu_dma_rst_out_reset_reset),                             //   input,   width = 1, matmul_afu_csr_bridge_master_translator_reset_reset_bridge_in_reset.reset
		.matmul_afu_dma_clock_out_clk_clk                                          (matmul_afu_dma_clock_out_clk_clk),                               //   input,   width = 1,                                        matmul_afu_dma_clock_out_clk.clk
		.matmul_afu_matmul_clock_out_clk_clk                                       (matmul_afu_matmul_clock_out_clk_clk)                             //   input,   width = 1,                                     matmul_afu_matmul_clock_out_clk.clk
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (1),
		.OUTPUT_RESET_SYNC_EDGES   ("both"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (0),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller (
		.reset_in0      (matmul_afu_dma_rst_out_reset_reset),  //   input,  width = 1, reset_in0.reset
		.clk            (matmul_afu_matmul_clock_out_clk_clk), //   input,  width = 1,       clk.clk
		.reset_out      (rst_controller_reset_out_reset),      //  output,  width = 1, reset_out.reset
		.reset_req      (),                                    // (terminated),                       
		.reset_req_in0  (1'b0),                                // (terminated),                       
		.reset_in1      (1'b0),                                // (terminated),                       
		.reset_req_in1  (1'b0),                                // (terminated),                       
		.reset_in2      (1'b0),                                // (terminated),                       
		.reset_req_in2  (1'b0),                                // (terminated),                       
		.reset_in3      (1'b0),                                // (terminated),                       
		.reset_req_in3  (1'b0),                                // (terminated),                       
		.reset_in4      (1'b0),                                // (terminated),                       
		.reset_req_in4  (1'b0),                                // (terminated),                       
		.reset_in5      (1'b0),                                // (terminated),                       
		.reset_req_in5  (1'b0),                                // (terminated),                       
		.reset_in6      (1'b0),                                // (terminated),                       
		.reset_req_in6  (1'b0),                                // (terminated),                       
		.reset_in7      (1'b0),                                // (terminated),                       
		.reset_req_in7  (1'b0),                                // (terminated),                       
		.reset_in8      (1'b0),                                // (terminated),                       
		.reset_req_in8  (1'b0),                                // (terminated),                       
		.reset_in9      (1'b0),                                // (terminated),                       
		.reset_req_in9  (1'b0),                                // (terminated),                       
		.reset_in10     (1'b0),                                // (terminated),                       
		.reset_req_in10 (1'b0),                                // (terminated),                       
		.reset_in11     (1'b0),                                // (terminated),                       
		.reset_req_in11 (1'b0),                                // (terminated),                       
		.reset_in12     (1'b0),                                // (terminated),                       
		.reset_req_in12 (1'b0),                                // (terminated),                       
		.reset_in13     (1'b0),                                // (terminated),                       
		.reset_req_in13 (1'b0),                                // (terminated),                       
		.reset_in14     (1'b0),                                // (terminated),                       
		.reset_req_in14 (1'b0),                                // (terminated),                       
		.reset_in15     (1'b0),                                // (terminated),                       
		.reset_req_in15 (1'b0)                                 // (terminated),                       
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (1),
		.OUTPUT_RESET_SYNC_EDGES   ("deassert"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (0),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller_001 (
		.reset_in0      (matmul_afu_dma_rst_out_reset_reset),  //   input,  width = 1, reset_in0.reset
		.clk            (matmul_afu_matmul_clock_out_clk_clk), //   input,  width = 1,       clk.clk
		.reset_out      (rst_controller_001_reset_out_reset),  //  output,  width = 1, reset_out.reset
		.reset_req      (),                                    // (terminated),                       
		.reset_req_in0  (1'b0),                                // (terminated),                       
		.reset_in1      (1'b0),                                // (terminated),                       
		.reset_req_in1  (1'b0),                                // (terminated),                       
		.reset_in2      (1'b0),                                // (terminated),                       
		.reset_req_in2  (1'b0),                                // (terminated),                       
		.reset_in3      (1'b0),                                // (terminated),                       
		.reset_req_in3  (1'b0),                                // (terminated),                       
		.reset_in4      (1'b0),                                // (terminated),                       
		.reset_req_in4  (1'b0),                                // (terminated),                       
		.reset_in5      (1'b0),                                // (terminated),                       
		.reset_req_in5  (1'b0),                                // (terminated),                       
		.reset_in6      (1'b0),                                // (terminated),                       
		.reset_req_in6  (1'b0),                                // (terminated),                       
		.reset_in7      (1'b0),                                // (terminated),                       
		.reset_req_in7  (1'b0),                                // (terminated),                       
		.reset_in8      (1'b0),                                // (terminated),                       
		.reset_req_in8  (1'b0),                                // (terminated),                       
		.reset_in9      (1'b0),                                // (terminated),                       
		.reset_req_in9  (1'b0),                                // (terminated),                       
		.reset_in10     (1'b0),                                // (terminated),                       
		.reset_req_in10 (1'b0),                                // (terminated),                       
		.reset_in11     (1'b0),                                // (terminated),                       
		.reset_req_in11 (1'b0),                                // (terminated),                       
		.reset_in12     (1'b0),                                // (terminated),                       
		.reset_req_in12 (1'b0),                                // (terminated),                       
		.reset_in13     (1'b0),                                // (terminated),                       
		.reset_req_in13 (1'b0),                                // (terminated),                       
		.reset_in14     (1'b0),                                // (terminated),                       
		.reset_req_in14 (1'b0),                                // (terminated),                       
		.reset_in15     (1'b0),                                // (terminated),                       
		.reset_req_in15 (1'b0)                                 // (terminated),                       
	);

endmodule
