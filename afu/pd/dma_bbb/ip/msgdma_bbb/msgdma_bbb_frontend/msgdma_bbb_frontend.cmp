	component msgdma_bbb_frontend is
		port (
			clk                   : in  std_logic                      := 'X';             -- clk
			reset                 : in  std_logic                      := 'X';             -- reset
			s_address             : in  std_logic_vector(2 downto 0)   := (others => 'X'); -- address
			s_read                : in  std_logic                      := 'X';             -- read
			s_readdata            : out std_logic_vector(63 downto 0);                     -- readdata
			s_write               : in  std_logic                      := 'X';             -- write
			s_writedata           : in  std_logic_vector(63 downto 0)  := (others => 'X'); -- writedata
			s_byteenable          : in  std_logic_vector(7 downto 0)   := (others => 'X'); -- byteenable
			m_fetch_address       : out std_logic_vector(48 downto 0);                     -- address
			m_fetch_burst         : out std_logic_vector(2 downto 0);                      -- burstcount
			m_fetch_byteenable    : out std_logic_vector(63 downto 0);                     -- byteenable
			m_fetch_read          : out std_logic;                                         -- read
			m_fetch_readdata      : in  std_logic_vector(511 downto 0) := (others => 'X'); -- readdata
			m_fetch_readdatavalid : in  std_logic                      := 'X';             -- readdatavalid
			m_fetch_waitrequest   : in  std_logic                      := 'X';             -- waitrequest
			m_store_address       : out std_logic_vector(48 downto 0);                     -- address
			m_store_burst         : out std_logic_vector(2 downto 0);                      -- burstcount
			m_store_byteenable    : out std_logic_vector(63 downto 0);                     -- byteenable
			m_store_waitrequest   : in  std_logic                      := 'X';             -- waitrequest
			m_store_write         : out std_logic;                                         -- write
			m_store_writedata     : out std_logic_vector(511 downto 0);                    -- writedata
			src_descriptor_data   : out std_logic_vector(255 downto 0);                    -- data
			src_descriptor_ready  : in  std_logic                      := 'X';             -- ready
			src_descriptor_valid  : out std_logic;                                         -- valid
			snk_response_data     : in  std_logic_vector(255 downto 0) := (others => 'X'); -- data
			snk_response_ready    : out std_logic;                                         -- ready
			snk_response_valid    : in  std_logic                      := 'X'              -- valid
		);
	end component msgdma_bbb_frontend;

