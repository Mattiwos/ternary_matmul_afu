	component msgdma_bbb is
		port (
			clk_clk                       : in  std_logic                      := 'X';             -- clk
			csr_address                   : in  std_logic_vector(7 downto 0)   := (others => 'X'); -- address
			csr_writedata                 : in  std_logic_vector(63 downto 0)  := (others => 'X'); -- writedata
			csr_byteenable                : in  std_logic_vector(7 downto 0)   := (others => 'X'); -- byteenable
			csr_write                     : in  std_logic                      := 'X';             -- write
			csr_read                      : in  std_logic                      := 'X';             -- read
			csr_readdata                  : out std_logic_vector(63 downto 0);                     -- readdata
			csr_readdatavalid             : out std_logic;                                         -- readdatavalid
			csr_waitrequest               : out std_logic;                                         -- waitrequest
			csr_burstcount                : in  std_logic_vector(0 downto 0)   := (others => 'X'); -- burstcount
			host_read_address             : out std_logic_vector(47 downto 0);                     -- address
			host_read_byteenable          : out std_logic_vector(63 downto 0);                     -- byteenable
			host_read_burstcount          : out std_logic_vector(2 downto 0);                      -- burstcount
			host_read_read                : out std_logic;                                         -- read
			host_read_readdata            : in  std_logic_vector(511 downto 0) := (others => 'X'); -- readdata
			host_read_readdatavalid       : in  std_logic                      := 'X';             -- readdatavalid
			host_read_waitrequest         : in  std_logic                      := 'X';             -- waitrequest
			host_write_address            : out std_logic_vector(47 downto 0);                     -- address
			host_write_writedata          : out std_logic_vector(511 downto 0);                    -- writedata
			host_write_byteenable         : out std_logic_vector(63 downto 0);                     -- byteenable
			host_write_burstcount         : out std_logic_vector(2 downto 0);                      -- burstcount
			host_write_write              : out std_logic;                                         -- write
			host_write_response           : in  std_logic_vector(1 downto 0)   := (others => 'X'); -- response
			host_write_writeresponsevalid : in  std_logic                      := 'X';             -- writeresponsevalid
			host_write_waitrequest        : in  std_logic                      := 'X';             -- waitrequest
			mem_read_write_address        : out std_logic_vector(47 downto 0);                     -- address
			mem_read_write_writedata      : out std_logic_vector(511 downto 0);                    -- writedata
			mem_read_write_byteenable     : out std_logic_vector(63 downto 0);                     -- byteenable
			mem_read_write_burstcount     : out std_logic_vector(2 downto 0);                      -- burstcount
			mem_read_write_write          : out std_logic;                                         -- write
			mem_read_write_read           : out std_logic;                                         -- read
			mem_read_write_readdata       : in  std_logic_vector(511 downto 0) := (others => 'X'); -- readdata
			mem_read_write_readdatavalid  : in  std_logic                      := 'X';             -- readdatavalid
			mem_read_write_waitrequest    : in  std_logic                      := 'X';             -- waitrequest
			reset_reset                   : in  std_logic                      := 'X'              -- reset
		);
	end component msgdma_bbb;

